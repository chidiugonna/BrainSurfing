{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MRI Brain Surfing An introduction to Surface formats and Surface analysis methods for MR brain images written to support Computing for Neuroimagers (SLHS 497/597) run at the University of Arizona in Fall 2020. The GitHub repository that supports this documentation is available here Links to the documentation for the lessons are provided below: Lesson 8 : Introduction to Surface-based Formats Practicum 8.1 : Surface Data Formats Lesson 9 : Working with Surface-based formats Practicum 9.1 : Surface-Based Analysis","title":"Home"},{"location":"#mri-brain-surfing","text":"An introduction to Surface formats and Surface analysis methods for MR brain images written to support Computing for Neuroimagers (SLHS 497/597) run at the University of Arizona in Fall 2020. The GitHub repository that supports this documentation is available here Links to the documentation for the lessons are provided below: Lesson 8 : Introduction to Surface-based Formats Practicum 8.1 : Surface Data Formats Lesson 9 : Working with Surface-based formats Practicum 9.1 : Surface-Based Analysis","title":" MRI Brain Surfing "},{"location":"about/","text":"Document History Date Author Document Action 2020-09-06 Chidi Framework established","title":"About"},{"location":"about/#document-history","text":"Date Author Document Action 2020-09-06 Chidi Framework established","title":"Document History"},{"location":"surfanalysis/prac91/","text":"Practicum 9.1 - Surface-Based Analysis","title":"practicum 9.1"},{"location":"surfanalysis/prac91/#practicum-91-surface-based-analysis","text":"","title":"Practicum 9.1 -  Surface-Based Analysis"},{"location":"surfanalysis/reg/","text":"registration","title":"registration"},{"location":"surfanalysis/reg/#registration","text":"","title":"registration"},{"location":"surfanalysis/working/","text":"Working with Surface-based Formats","title":"Working with Surface-based formats"},{"location":"surfanalysis/working/#working-with-surface-based-formats","text":"","title":"Working with Surface-based Formats"},{"location":"surfdata/cifti/","text":"Cifti Data An assortment of CIFTI and GIFTI files are available from OSF: If you have the python client osfclient installed then use: osf -p hetgq fetch /Data/HCP . Python Possible free jupyter option is https://colab.research.google.com Matlab There are libraries available in matlab for working with CIFTI. This FAQ from the Human Connectome Project provides 3 approaches for loading CIFTI files. For HCP Approach 1 : For HCP MEG data The FieldTrip toolbox provides a matlab library for working with CIFTI files. It is for use with HCP MEG Data. It is not advised for use with MRI data because it pads the CIFTI matrix with NaN values however it is a completely independent library. The field trip toolbox functions are prefixed by ft_ as in ft_read_cifti Approach 2 : For HCP MRI data From the HCP FAQ download just the following 3 matlab functions ciftiopen.m , ciftisave.m and ciftisavereset.m and place in your path. You will need need the gifti matlab library as well. You can download a release version gifti-zip from here . Unzip to a folder and in matlab add to your path as addpath /path/to/gifti We will also need access to wb_command Approach 3: Alpha Testing for HCP MRI Data This library is in alpha testing phase and is based on the Field Trip fieldbox. It should resolve the issues with Approach 1 but it is still strictly in development and so changes are possible. The field trip library that it is based on is also included in subfolder ft_cifti For this exploration we will proceed with Approach 3 git clone https://github.com/Washington-University/cifti-matlab.git Container Singularity and Docker containers with the HCP Workbench are available for exploring CIFTI data. The singularity image can be run as follows: singularity run --nv -B $PWD:/mnt workbench.sif --homedir /mnt wb_view The docker image can be run as docker run --rm --user=developer -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:/home/developer/.Xauthority -it --net=host --pid=host --ipc=host aacazxnat/workbench:0.1 wb_view Problems with opening wb_view using Docker on gpu enabled computer You will need to add Nvidia-Docker to your system. See Github for instructions for installation which are replicated below: distribution=$(. /etc/os-release;echo $ID$VERSION_ID) curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit sudo systemctl restart docker Test nvidia-smi with the latest official CUDA image docker run --gpus all nvidia/cuda:10.2-base nvidia-smi Now try the gpu image: docker run --gpus all --rm --user=developer -e DISPLAY=$DISPLAY -v /usr/lib/nvidia:/usr/lib/nvidia -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME:/mnt -v $HOME/.Xauthority:/home/developer/.Xauthority -it --net=host --pid=host --device /dev/dri --ipc=host --privileged aacazxnat/workbenchgpu_runtime:0.1 --homedir /mnt wb_view","title":"cifti"},{"location":"surfdata/cifti/#cifti","text":"","title":"Cifti"},{"location":"surfdata/cifti/#data","text":"An assortment of CIFTI and GIFTI files are available from OSF: If you have the python client osfclient installed then use: osf -p hetgq fetch /Data/HCP .","title":"Data"},{"location":"surfdata/cifti/#python","text":"Possible free jupyter option is https://colab.research.google.com","title":"Python"},{"location":"surfdata/cifti/#matlab","text":"There are libraries available in matlab for working with CIFTI. This FAQ from the Human Connectome Project provides 3 approaches for loading CIFTI files. For HCP","title":"Matlab"},{"location":"surfdata/cifti/#approach-1-for-hcp-meg-data","text":"The FieldTrip toolbox provides a matlab library for working with CIFTI files. It is for use with HCP MEG Data. It is not advised for use with MRI data because it pads the CIFTI matrix with NaN values however it is a completely independent library. The field trip toolbox functions are prefixed by ft_ as in ft_read_cifti","title":"Approach 1 : For HCP MEG data"},{"location":"surfdata/cifti/#approach-2-for-hcp-mri-data","text":"From the HCP FAQ download just the following 3 matlab functions ciftiopen.m , ciftisave.m and ciftisavereset.m and place in your path. You will need need the gifti matlab library as well. You can download a release version gifti-zip from here . Unzip to a folder and in matlab add to your path as addpath /path/to/gifti We will also need access to wb_command","title":"Approach 2 : For HCP MRI data"},{"location":"surfdata/cifti/#approach-3-alpha-testing-for-hcp-mri-data","text":"This library is in alpha testing phase and is based on the Field Trip fieldbox. It should resolve the issues with Approach 1 but it is still strictly in development and so changes are possible. The field trip library that it is based on is also included in subfolder ft_cifti For this exploration we will proceed with Approach 3 git clone https://github.com/Washington-University/cifti-matlab.git","title":"Approach 3: Alpha Testing for HCP MRI Data"},{"location":"surfdata/cifti/#container","text":"Singularity and Docker containers with the HCP Workbench are available for exploring CIFTI data. The singularity image can be run as follows: singularity run --nv -B $PWD:/mnt workbench.sif --homedir /mnt wb_view The docker image can be run as docker run --rm --user=developer -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:/home/developer/.Xauthority -it --net=host --pid=host --ipc=host aacazxnat/workbench:0.1 wb_view","title":"Container"},{"location":"surfdata/cifti/#problems-with-opening-wb_view-using-docker-on-gpu-enabled-computer","text":"You will need to add Nvidia-Docker to your system. See Github for instructions for installation which are replicated below: distribution=$(. /etc/os-release;echo $ID$VERSION_ID) curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit sudo systemctl restart docker Test nvidia-smi with the latest official CUDA image docker run --gpus all nvidia/cuda:10.2-base nvidia-smi Now try the gpu image: docker run --gpus all --rm --user=developer -e DISPLAY=$DISPLAY -v /usr/lib/nvidia:/usr/lib/nvidia -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME:/mnt -v $HOME/.Xauthority:/home/developer/.Xauthority -it --net=host --pid=host --device /dev/dri --ipc=host --privileged aacazxnat/workbenchgpu_runtime:0.1 --homedir /mnt wb_view","title":"Problems with opening wb_view using Docker on gpu enabled computer"},{"location":"surfdata/freesurfer/","text":"freesurfer pipeline","title":"Freesurfer Pipeline"},{"location":"surfdata/freesurfer/#freesurfer-pipeline","text":"","title":"freesurfer pipeline"},{"location":"surfdata/gifti/","text":"Gifti Gifti Library This library is matlab based and in addition to standard Gifti files with extension .gii can read in and export to a range of surface file formats like freesurfer .pial , .sphere , .white , .surf , .curv etc, as well as matlab .mat files, .vtk files and several others. This library is integrated into SPM . You can download a release version gifti-zip from here In linux command shell you can do: cd library wget https://github.com/gllmflndn/gifti/archive/master.zip unzip master.zip rm master.zip mv gifti-master gifti-release For development updates, usage and to get latest code go to github page. cd library git clone https://github.com/gllmflndn/gifti.git mv gifti gifti-latest Open Gifti File example % add release library to path addpath /home/chidi/repos/CFN/SurfaceFormat/library/gifti-release % read and view the GIFTI surface mesh surfacemesh='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.surf.gii' gmesh = gifti(surfacemesh); figure; plot(gmesh) %read the curvature and display on mesh curvature='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.shape.gii'; gcurv = gifti(curvature); % plot mesh with curvature figure; plot(gmesh,gcurv) Create Gifti File example % add release library to path addpath /home/chidi/repos/CFN/SurfaceFormat/library/gifti-release load mri D = squeeze(D); Ds = smooth3(D); g = gifti(isosurface(Ds,5)) h = plot(g); daspect([1,1,.4]); view(45,30); axis tight lightangle(45,30); set(h,'SpecularColorReflectance',0,'SpecularExponent',50) save(g,'mri.surf.gii','Base64Binary'); gmri = gifti('mri.surf.gii'); figure; plot(gmri) Viewing the XML header The gifti file itself is basically a large xml file that describes th metadata and data contained for the surface. In ASCII format then it is simple enough to just open it in a text editor and peruse the contents. In some cases the data is encoded as Base64 binary and compressed which the gifti library can manage. In order to see the xml header for files that are not ascii then you can simple open the gifti and then resave it as an ascii gifti as follows surfacemesh='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.surf.gii' gmesh = gifti(surfacemesh); save(gmesh,'asAscii.gii','ASCII');","title":"gifti"},{"location":"surfdata/gifti/#gifti","text":"","title":"Gifti"},{"location":"surfdata/gifti/#gifti-library","text":"This library is matlab based and in addition to standard Gifti files with extension .gii can read in and export to a range of surface file formats like freesurfer .pial , .sphere , .white , .surf , .curv etc, as well as matlab .mat files, .vtk files and several others. This library is integrated into SPM . You can download a release version gifti-zip from here In linux command shell you can do: cd library wget https://github.com/gllmflndn/gifti/archive/master.zip unzip master.zip rm master.zip mv gifti-master gifti-release For development updates, usage and to get latest code go to github page. cd library git clone https://github.com/gllmflndn/gifti.git mv gifti gifti-latest","title":"Gifti Library"},{"location":"surfdata/gifti/#open-gifti-file-example","text":"% add release library to path addpath /home/chidi/repos/CFN/SurfaceFormat/library/gifti-release % read and view the GIFTI surface mesh surfacemesh='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.surf.gii' gmesh = gifti(surfacemesh); figure; plot(gmesh) %read the curvature and display on mesh curvature='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.shape.gii'; gcurv = gifti(curvature); % plot mesh with curvature figure; plot(gmesh,gcurv)","title":"Open Gifti File example"},{"location":"surfdata/gifti/#create-gifti-file-example","text":"% add release library to path addpath /home/chidi/repos/CFN/SurfaceFormat/library/gifti-release load mri D = squeeze(D); Ds = smooth3(D); g = gifti(isosurface(Ds,5)) h = plot(g); daspect([1,1,.4]); view(45,30); axis tight lightangle(45,30); set(h,'SpecularColorReflectance',0,'SpecularExponent',50) save(g,'mri.surf.gii','Base64Binary'); gmri = gifti('mri.surf.gii'); figure; plot(gmri)","title":"Create Gifti File example"},{"location":"surfdata/gifti/#viewing-the-xml-header","text":"The gifti file itself is basically a large xml file that describes th metadata and data contained for the surface. In ASCII format then it is simple enough to just open it in a text editor and peruse the contents. In some cases the data is encoded as Base64 binary and compressed which the gifti library can manage. In order to see the xml header for files that are not ascii then you can simple open the gifti and then resave it as an ascii gifti as follows surfacemesh='./exampleData/BV_GIFTI/GzipBase64/sujet01_Lwhite.surf.gii' gmesh = gifti(surfacemesh); save(gmesh,'asAscii.gii','ASCII');","title":"Viewing the XML header"},{"location":"surfdata/introformats/","text":"Introduction to Surface-based Formats","title":"Introduction to Surface-based Formats"},{"location":"surfdata/introformats/#introduction-to-surface-based-formats","text":"","title":"Introduction to Surface-based Formats"},{"location":"surfdata/nifti/","text":"Nifti-1 References Brainder blog has a nice detailed descrption of Nifti-2 and Nifti-1","title":"nifti"},{"location":"surfdata/nifti/#nifti-1","text":"","title":"Nifti-1"},{"location":"surfdata/nifti/#references","text":"Brainder blog has a nice detailed descrption of Nifti-2 and Nifti-1","title":"References"},{"location":"surfdata/nifti2/","text":"Nifti-2 References Brainder blog has a nice detailed descrption of Nifti-2 and Nifti-1","title":"nifti-2"},{"location":"surfdata/nifti2/#nifti-2","text":"","title":"Nifti-2"},{"location":"surfdata/nifti2/#references","text":"Brainder blog has a nice detailed descrption of Nifti-2 and Nifti-1","title":"References"},{"location":"surfdata/prac81/","text":"Practicum 8.1 - Surface Data Formats","title":"practicum 8.1"},{"location":"surfdata/prac81/#practicum-81-surface-data-formats","text":"","title":"Practicum 8.1 -  Surface Data Formats"}]}